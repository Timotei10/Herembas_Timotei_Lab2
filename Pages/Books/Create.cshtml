using Herembas_Timotei_Lab2.Models;

namespace Herembas_Timotei_Lab2.Pages.Books
{
    public class CreateModel : BookCategoriesPageModel
    private readonly Nume_Pren_Lab2.Data.Nume_Pren_Lab2Context _context;
 public CreateModel(Nume_Pren_Lab2.Data.Nume_Pren_Lab2Context context)
 {
 _context = context;
 }
 public IActionResult OnGet()
 {
var authorList = _context.Author.Select(x => new
 {
 x.ID,
 FullName = x.LastName + " " + x.FirstName
 });
 ViewData["AuthorID"] = new SelectList(authorList, "ID", "FullName");
 ViewData["PublisherID"] = new SelectList(_context.Publisher, "ID",
"PublisherName");

 var book = new Book();
 book.BookCategories = new List<BookCategory>();
 PopulateAssignedCategoryData(_context, book);
 return Page();
 }
 [BindProperty]
 public Book Book { get; set; }
 public async Task<IActionResult> OnPostAsync(string[] selectedCategories)
 {
 var newBook = new Book();
 if (selectedCategories != null)
 {
 newBook.BookCategories = new List<BookCategory>();
 foreach (var cat in selectedCategories)
 {
 var catToAdd = new BookCategory
 {
 CategoryID = int.Parse(cat)
 };
newBook.BookCategories.Add(catToAdd);
 }
 }
 if (await TryUpdateModelAsync<Book>(
 newBook,
 "Book",
 i => i.Title, i => i.Author,
 i => i.Price, i => i.PublishingDate, i => i.PublisherID))
 {
 _context.Book.Add(newBook);
 await _context.SaveChangesAsync();
 return RedirectToPage("./Index");
 }
 PopulateAssignedCategoryData(_context, newBook);
 return Page();
 }
 }

}

@page
@model Herembas_Timotei_Lab2.Pages.Books.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Book.Title" class="control-label"></label>
                <input asp-for="Book.Title" class="form-control" />
                <span asp-validation-for="Book.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Book.Author" class="control-label"></label>
                <input asp-for="Book.Author" class="form-control" />
                <span asp-validation-for="Book.Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Book.Price" class="control-label"></label>
                <input asp-for="Book.Price" class="form-control" />
                <span asp-validation-for="Book.Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Book.PublishingDate" class="control-label"></label>
                <input asp-for="Book.PublishingDate" class="form-control" />
                <span asp-validation-for="Book.PublishingDate" class="textdanger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Book.PublisherID" class="control-label">Publisher Name</label>
                <select asp-for="Book.PublisherID" class="form-control" asp-items="ViewBag.PublisherID">
                </select>
                <span asp-validation-for="Book.PublisherID" class="text-danger"></span>
            </div>
            <div class="form-group">
 <div class="table">
 <table>
 <tr>
 @{
 int cnt = 0;
 foreach (var cat in Model.AssignedCategoryDataList)
 {
 if (cnt++ % 3 == 0)
{
        @:</tr><tr>
 }
        @:<td>
         <input type="checkbox"
         name="selectedCategories"
         value="@cat.CategoryID"
         @(Html.Raw(cat.Assigned ?
"checked=\"checked\"" : "")) />
         @cat.CategoryID @: @cat.Name
         @:</td>
 }
         @:</tr>
 }
 </table>
 </div>
 </div>


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
